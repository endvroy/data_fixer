send a signal <VAR> to the current process
decode a hex string <STR_LITERAL> to utf-8
check if all elements in list <VAR> are identical
format number of spaces between strings <VAR> <VAR> and <VAR> to be <NUM>
how to convert a string from cp-1251 to utf-8?
get rid of none values in dictionary <VAR>
get rid of none values in dictionary <VAR>
capture final output of a chain of system commands <STR_LITERAL>
concatenate a list of strings <VAR>
find intersection data between series <VAR> and series <VAR>
sending http headers to <VAR>
format a datetime string <VAR> to extract date only
split a multi-line string <VAR> into separate strings
split a multi-line string <STR_LITERAL> by new line character <STR_LITERAL>
concatenate elements of list <VAR> by a colon <STR_LITERAL>
get the first object from a queryset in django model <VAR>
calculate sum over all rows of 2d numpy array
enable warnings using action <STR_LITERAL>
concatenate items of list <VAR> with a space <STR_LITERAL>
run script <STR_LITERAL> with argument <STR_LITERAL> on terminal using python executable
how can i parse a time string containing milliseconds in it with python?
convert a string <VAR> with dot and comma into a float number <VAR>
convert a string <STR_LITERAL> with dot and comma into a floating number
set pythonpath in python script
split string <STR_LITERAL> using a regex <STR_LITERAL>
open a file <VAR> in append mode
download a file <STR_LITERAL> over http and save to <STR_LITERAL>
download a file <VAR> over http and save to <VAR>
download a file <STR_LITERAL> over http
download a file <VAR> over http
download a file <VAR> over http and save to <STR_LITERAL>
argparse add argument with flag <STR_LITERAL> and version action of <STR_LITERAL> to parser <VAR>
remove key <STR_LITERAL> from dictionary <VAR>
create new dataframe object by merging columns <STR_LITERAL> of dataframes <VAR> and <VAR> and rename the columns from dataframes <VAR> and <VAR> with suffix <VAR> and <VAR> respectively
split a string <VAR> by space with <NUM> splits
read keyboard-input
enable debug mode on flask application <VAR>
python save list <VAR> to file object <STR_LITERAL>
multiply a matrix <VAR> with a 3d tensor <VAR> in scipy
create 3d array of zeroes of size <VAR>
cut off the last word of a sentence <VAR>
convert scalar <VAR> to array
sum all elements of nested list <VAR>
convert hex string <STR_LITERAL> to a float number
multiple each value by <NUM> for all keys in a dictionary <VAR>
running bash script <STR_LITERAL>
join elements of list <VAR> with a comma <VAR>
make a comma-separated string from a list <VAR>
reverse the list that contains <NUM> to <NUM>
remove substring <STR_LITERAL> from a string <STR_LITERAL>
reverse the order of words delimited by <VAR> in string <VAR>
convert epoch time represented as milliseconds <VAR> to string using format <STR_LITERAL>
parse milliseconds epoch time <STR_LITERAL> to format <STR_LITERAL>
get the date <NUM> days before the current date
sum elements at index <VAR> of each list in list <VAR>
sum columns of a list <VAR>
encode binary string <STR_LITERAL> to base64 code
combine list of dictionaries <VAR> with the same keys in each list to a single dictionary
merge a nested dictionary <VAR> into a flat dictionary by concatenating nested values with the same key <VAR>
how do i get the url parameter in a flask view
identify duplicate values in list <VAR>
insert directory <STR_LITERAL> into directory <VAR>
modify sys.path for python module <VAR>
insert a <STR_LITERAL> value into a sqlite3 table
flatten list <VAR>
append elements of a set <VAR> to a list <VAR>
append elements of a set to a list in python
write the data of dataframe <VAR> into text file <VAR>
write content of dataframe <VAR> into text file <STR_LITERAL>
split a string <VAR> by last occurrence of character <VAR>
get the last part of a string before the character <STR_LITERAL>
upload file using ftp
add one to the hidden web element with id <STR_LITERAL> with selenium python script
create array containing the maximum value of respective elements of array <VAR> and array <VAR>
print a list <VAR> and move first 3 elements to the end of the list
loop over files in directory <STR_LITERAL>
loop over files in directory <VAR>
create a random list of integers
using %f with strftime() in python to get microseconds
google app engine execute gql query <STR_LITERAL> with parameter <VAR>
filter rows in pandas starting with alphabet <STR_LITERAL> using regular expression
print a 2 dimensional list <VAR> as a table with delimiters
pandas: delete rows in dataframe <VAR> based on multiple columns values
format the variables <VAR> and <VAR> using string formatting
format string <STR_LITERAL> with variables <VAR> and <VAR>
format string <STR_LITERAL>
convert list of lists <VAR> to list of integers
combine elements of each list in list <VAR> into digits of a single integer
convert a list of lists <VAR> to list of integers
write the elements of list <VAR> concatenated by special character <STR_LITERAL> to file <VAR>
removing an element from a list based on a predicate <STR_LITERAL> or <STR_LITERAL>
remove duplicate words from a string <VAR> using regex
count non zero values in each column in pandas data frame
search for string that matches regular expression pattern <STR_LITERAL> in string <STR_LITERAL>
split string <STR_LITERAL> into a list on white spaces
search for occurrences of regex pattern <STR_LITERAL> in xml string <VAR>
erase all the contents of a file <VAR>
convert a string into datetime using the format <STR_LITERAL>
find the index of a list with the first element equal to <STR_LITERAL> within the list of lists <VAR>
lower a string <VAR> and remove non-alphanumeric characters aside from space
remove all non-alphanumeric characters except space from a string <VAR> and lower it
subscript text <STR_LITERAL> with <STR_LITERAL> as subscripted in matplotlib labels for arrays <STR_LITERAL> and <STR_LITERAL>
subscript text <STR_LITERAL> with <STR_LITERAL> as subscripted in matplotlib labels for arrays <STR_LITERAL> and <STR_LITERAL>
loop over a list <VAR> if sublists length equals <NUM>
initialize a list <VAR> of <NUM> objects object()
create list <VAR> containing 100 instances of object <VAR>
get the content of child tag with`href` attribute whose parent has css <VAR>
joining data from dataframe <VAR> with data from dataframe <VAR> based on matching values of column <STR_LITERAL> in both dataframes
use <VAR> operator to print variable values <VAR> inside a string
split a string by a delimiter in python
check if directory <VAR> exists and create it if necessary
check if a directory <VAR> exists and create it if necessary
check if a directory <VAR> exists and create it if necessary
check if a directory <VAR> exists and create it if necessary
replace a separate word <STR_LITERAL> by <STR_LITERAL> in a string <STR_LITERAL>
substitute ascii letters in string <STR_LITERAL> with empty string <STR_LITERAL>
get digits only from a string <VAR> using lambda function
access a tag called <STR_LITERAL> in beautifulsoup <VAR>
get a dictionary <VAR> of key-value pairs in pymongo cursor <VAR>
create new matrix object by concatenating data from matrix a and matrix b
concat two matrices <VAR> and <VAR> in numpy
get the characters count in a file <VAR>
count the occurrences of item <STR_LITERAL> in list <VAR>
count the occurrences of items in list <VAR>
count the occurrences of items in list <VAR>
count the occurrences of items in list <VAR>
count the occurrences of item <STR_LITERAL> in list <VAR>
copy file <VAR> to directory <VAR>
find the key associated with the largest value in dictionary <VAR> whilst key is non-zero value
get the largest key whose not associated with value of <NUM> in dictionary <VAR>
get the largest key in a dictionary <VAR> with non-zero value
put the curser at beginning of the file
combine values from column <STR_LITERAL> and column <STR_LITERAL> of dataframe <VAR> into column <STR_LITERAL> of datafram <VAR>
remove key <STR_LITERAL> from dictionary <VAR>
update datetime field in <VAR> to be the existing <VAR> plus <NUM> years
merge list <VAR> and list <VAR> and list <VAR> into one list
increment a value with leading zeroes in a number <VAR>
check if a pandas dataframe <VAR> 's index is sorted
convert tuple <VAR> to list
convert list <VAR> to tuple
convert tuple <VAR> to list
send the output of pprint object <VAR> to file <VAR>
get index of rows in column <STR_LITERAL>
create a list containing the indexes of rows where the value of column <STR_LITERAL> in dataframe <VAR> are equal to true
get list of indexes of rows where column <STR_LITERAL> values match true
get index of rows in dataframe <VAR> which column <STR_LITERAL> matches value true
change working directory to the directory <VAR>
insert data from a string <VAR> to sqlite db <VAR>
decode string <STR_LITERAL> into a normal string
convert a raw string <VAR> into a normal string
convert a raw string <VAR> into a normal string
split a string <VAR> with into all strings of repeated characters
scatter a plot with x y position of <VAR> and face color equal to none
do a scatter plot with empty circles
remove a div with a id <VAR> using beautifulsoup
filter rows containing key word <VAR> in column <VAR>
convert index at level <NUM> into a column in dataframe <VAR>
add indexes in a data frame <VAR> to a column <VAR>
convert pandas index in a dataframe to columns
get reverse of list items from list <VAR> using extended slicing
join each element in array <VAR> with element at the same index in array <VAR> as a tuple
zip two 2-d arrays <VAR> and <VAR>
convert list <VAR> into a comma separated string
send a post request with raw data <VAR> and basic authentication with <VAR> and <VAR>
find last occurrence of character <STR_LITERAL> in string <STR_LITERAL>
iterate ove list <VAR> using list comprehension
extract all the values with keys <STR_LITERAL> and <STR_LITERAL> from a list of dictionaries <VAR> to list of tuples
get the filename without the extension from file <STR_LITERAL>
create a dictionary by adding each two adjacent elements in tuple <VAR> as key/value pair to it
create a list containing flattened list <VAR>
select rows in a dataframe <VAR> column <STR_LITERAL> between two values <NUM> and <NUM>
replace all occurences of newlines <VAR> with <VAR> in dataframe <VAR>
replace all occurrences of a string <VAR> by string <VAR> in a pandas data frame <VAR>
create a list containing each two adjacent letters in string <VAR> as its elements
get a list of pairs from a string <VAR> using lambda function
extract a url from a string <VAR>
extract a url from a string <VAR>
remove all special characters punctuation and spaces from a string <VAR> using regex
create a datetimeindex containing <NUM> periods of the second friday of each month starting from date <STR_LITERAL>
create multidimensional array <VAR> with <NUM> rows and <NUM> columns in python
replace spaces with underscore
get an absolute file path of file <STR_LITERAL>
split string <VAR> on white spaces
get filename without extension from file <VAR>
get a list containing the sum of each element <VAR> in list <VAR> plus the previous elements
split a string <STR_LITERAL> by <STR_LITERAL> keeping <STR_LITERAL> in the result
shuffle columns of an numpy array <VAR>
copy all values in a column <STR_LITERAL> to a new column <STR_LITERAL> in a pandas data frame <VAR>
find a value within nested json <STR_LITERAL> where the key inside another key <STR_LITERAL> is unknown
check characters of string <VAR> are true predication of function <VAR>
determine number of files on a drive with python
how to get a single result from a sqlite query in python?
convert string <VAR> into a list of integers <VAR>
get a list of integers by splitting a string <VAR> with comma
sorting a python list by two criteria
sort a list of objects <VAR> based on a function <VAR> in descending order
reverse list <VAR> based on the <VAR> attribute of each object
sort a list of objects <VAR> in reverse order by their <VAR> property
click a href button <STR_LITERAL> with selenium
click a href button having text <VAR> with selenium
click a href button with text <STR_LITERAL> with selenium
cast an int <VAR> to a string and concat to string <STR_LITERAL>
sorting data in dataframe pandas
prepend the line <STR_LITERAL> to the contents of file <STR_LITERAL> and save as the file <STR_LITERAL>
sort a list <VAR> by length of value in tuple
split string <VAR> by words that ends with <STR_LITERAL>
return <VAR> if string <VAR> contains regex <VAR>
removing duplicates in list <VAR>
removing duplicates in list <VAR>
removing duplicates in list <VAR>
convert array <VAR> into a list
convert the first row of numpy matrix <VAR> to a list
in <VAR> get the content of the sibling of the <VAR> tag with text content <VAR>
convert elements of each tuple in list <VAR> into a string separated by character <VAR>
convert each tuple in list <VAR> to a string with <STR_LITERAL> separating the tuples' elements
get the html from the current web page of a selenium driver
get all matches with regex pattern <VAR> in list of string <VAR>
select values from column <STR_LITERAL> for which corresponding values in column <STR_LITERAL> will be greater than 50 and in column <STR_LITERAL> - equal 900 in dataframe <VAR>
sort dictionary <VAR> in ascending order based on its keys and items
get sorted list of keys of dict <VAR>
how to sort dictionaries by keys in python
convert string <STR_LITERAL> into integer
function to convert strings into integers
convert items in <VAR> to integers
call a shell script <VAR> using subprocess
call a shell script <VAR> using subprocess
combine lists <VAR> and <VAR> by alternating their elements
encode string <STR_LITERAL>
encode a string <VAR> to <VAR> encoding
parse tab-delimited csv file <STR_LITERAL> into a list
get attribute <VAR> of object <VAR>
group a list of dicts <VAR> into one dict by key
how do i sum the first value in each tuple in a list of tuples in python?
convert unicode string u"{'code1':1,'code2':1}" into dictionary
find all words in a string <VAR> that start with the <VAR> sign
remove any url within string <VAR>
replace all elements in array <VAR> that are not present in array <VAR> with zeros
calculate mean across dimension in a 2d array <VAR>
running r script <STR_LITERAL> from python
run r script <STR_LITERAL>
add a header to a csv file
replacing nan in the dataframe <VAR> with row average
convert unix timestamp <STR_LITERAL> to formatted string <STR_LITERAL>
call a base class's class method <VAR> from derived class <VAR>
selecting rows in numpy ndarray <VAR> where the value in the first column is <NUM> and value in the second column is <NUM>
separate words delimited by one or more spaces into a list
length of longest element in list <VAR>
get the value associated with unicode key <STR_LITERAL> of first dictionary in list <VAR>
retrieve each line from a file <STR_LITERAL> as a list
swap keys with values in a dictionary <VAR>
open a file <VAR> in write mode
how to count distinct values in a column of a pandas group by object?
check if any key in the dictionary <VAR> starts with the string <VAR>
create list of values from dictionary <VAR> that have a key that starts with <STR_LITERAL>
convert a pandas series <VAR> into a pandas dataframe <VAR> with columns <VAR> and <VAR>
print elements of list <VAR> seperated by tabs <VAR>
print unicode string <STR_LITERAL> with utf-8
encode a latin character in string <VAR> properly
resized image <VAR> to width height of <VAR> with filter of <VAR>
regex find "n"s only in the middle of string <VAR>
display the float <VAR> as a percentage
sort a list of dictionary <VAR> by the key <VAR>
sort a list <VAR> of dicts by dict value <STR_LITERAL>
sort a list of dictionaries by the value of keys <STR_LITERAL> <STR_LITERAL> <STR_LITERAL> in ascending order
find <NUM> largest differences between each respective elements of list <VAR> and list <VAR>
beautifulsoup find all <STR_LITERAL> elements in html string <VAR> with class of <STR_LITERAL>
write records in dataframe <VAR> to table <STR_LITERAL> in schema <STR_LITERAL>
extract brackets from string <VAR>
remove duplicate elements from list <STR_LITERAL>
read a file <VAR> without newlines
get the position of item <NUM> in <VAR>
get the position of item <NUM> in <VAR>
get the position of item <NUM> in <VAR>
get the position of item <NUM> in <VAR>
get the position of item <NUM> in <VAR>
get the position of item <VAR> in list <VAR>
get the position of item <VAR> in list <VAR>
find the first element of the tuple with the maximum second element in a list of tuples <VAR>
get the item at index <NUM> from the tuple that has maximum value at index <NUM> in list <VAR>
make a delay of <NUM> second
convert list of tuples <VAR> to a string
django set default value of field <VAR> equal to <STR_LITERAL>
sort lis <VAR> in ascending order based on the degrees value of its elements
how do i perform secondary sorting in python?
convert a list into a generator object
remove elements from list <VAR> that have an index number mentioned in list <VAR>
open a file <VAR> in write mode
get attribute <STR_LITERAL> from object <VAR>
convert tuple of tuples <VAR> to tuple
convert tuple of tuples <VAR> to list in one line
python pandas: how to replace a characters in a column of a dataframe?
unzip the list <VAR>
unzip the list <VAR>
unzip list <VAR>
unzip list <VAR> and return a generator
unzip list <VAR>
unzip list <VAR> and fill empty results with none
encode <STR_LITERAL> to a json string
add key <STR_LITERAL> to dictionary <VAR> with value <STR_LITERAL>
add key <STR_LITERAL> to dictionary <VAR> with value 1
add key <STR_LITERAL> to dictionary <VAR> with value 1
add key <STR_LITERAL> to dictionary <VAR> with value 1
find maximal value in matrix <VAR>
round number <VAR> to <NUM> precision after the decimal point
extract ip address from an html string
filter dataframe <VAR> by values in column <VAR> that appear more than once
append each line in file <VAR> into a list
get a list of integers <VAR> from a file <VAR>
add color bar with image <VAR> to plot <VAR>
count most frequent 100 words in column <STR_LITERAL> of dataframe <VAR>
python split a string using regex
generate all 2-element subsets of tuple <VAR>
get a value of datetime.today() in the utc time zone
get a new list <VAR> by removing empty list from a list of lists <VAR>
create <VAR> to contain the lists from list <VAR> excluding the empty lists from <VAR>
django response with json <VAR>
get all text that is not enclosed within square brackets in string <VAR>
use a regex to get all text in a string <VAR> that is not surrounded by square brackets
get whatever is between parentheses as a single match and any char outside as an individual match in string <STR_LITERAL>
match regex <STR_LITERAL> with string <STR_LITERAL>
match multiple regex patterns with the alternation operator <VAR> in a string <VAR>
formate each string cin list <VAR> into pattern <STR_LITERAL>
open a background process <STR_LITERAL> with arguments <STR_LITERAL>
get list of values from dictionary <VAR> w.r.t list of keys <VAR>
convert list <VAR> into a dictionary
average each two columns of array <VAR>
double backslash escape all double quotes in string <VAR>
split a string into a list of words and whitespace
plotting stacked barplots on a panda data frame
reverse the keys and values in a dictionary <VAR>
finding the index of elements containing substring <STR_LITERAL> and <STR_LITERAL> in a list of strings <VAR>
check if object <VAR> is a string
check if object <VAR> is a string
check if object <VAR> is a string
check if object <VAR> is a string
check if <VAR> is a string
append list <VAR> to <VAR>
append list <VAR> to <VAR>
append list <VAR> to <VAR>
append items in list <VAR> to <VAR>
append a tuple of elements from list <VAR> with indexes <STR_LITERAL> to list <VAR>
initialize <VAR> in flask config with <VAR>
unpack a series of tuples in pandas into a dataframe with column names <STR_LITERAL> and <STR_LITERAL>
find the index of an element <STR_LITERAL> in a list <VAR>
rotate the xtick labels of matplotlib plot <VAR> by <NUM> degrees to make long labels readable
remove symbols from a string <VAR>
get the current directory of a script
find octal characters matches from a string <VAR> using regex
split string <VAR> based on occurrences of regex pattern <STR_LITERAL>
split string <VAR> at every space followed by an upper-case letter
send multipart encoded file <VAR> to url <VAR> with headers <VAR> and metadata <VAR>
write bytes <VAR> to a file <VAR> in python 3
get a list from a list <VAR> with values mapped into a dictionary <VAR>
find duplicate names in column <STR_LITERAL> of the dataframe <VAR>
truncate float <NUM> to <NUM> decimal places
sort list <VAR> in descending order based on the date value in second element of each list in list <VAR>
place the radial ticks in plot <VAR> at <NUM> degrees
check if path <VAR> is an absolute path
get number of keys in dictionary <VAR>
count the number of keys in dictionary <VAR>
pandas dataframe get first row of each group by <STR_LITERAL>
split a list in first column into multiple columns keeping other columns as well in pandas data frame
extract attributes <STR_LITERAL> from string <VAR>
sum integers contained in strings in list <VAR>
call a subprocess with arguments <STR_LITERAL> that may contain spaces
reverse a priority queue <VAR> in python without using classes
make a barplot of data in column <VAR> of dataframe <VAR> colour-coded according to list <VAR>
find all matches of regex pattern <STR_LITERAL> in string <VAR>
get the length of list <VAR>
getting the length of array <VAR>
getting the length of array <VAR>
getting the length of <VAR>
getting the length of <VAR>
remove escape character from string <STR_LITERAL>
replace each <STR_LITERAL> with <STR_LITERAL> and each <STR_LITERAL> with <STR_LITERAL> in the string <STR_LITERAL> in a single pass
remove directory tree <STR_LITERAL>
create a new column <VAR> in pandas data frame <VAR> based on the values in column <VAR>
reverse sort counter <VAR> by values
reverse sort counter <VAR> by value
append a numpy array <STR_LITERAL> to a numpy array <STR_LITERAL>
numpy concatenate two arrays <VAR> and <VAR> along the first axis
numpy concatenate two arrays <VAR> and <VAR> along the second axis
numpy concatenate two arrays <VAR> and <VAR> along the first axis
numpy concatenate two arrays <VAR> and <VAR> along the first axis
fetch address information for host <STR_LITERAL> ion port <NUM>
add a column <STR_LITERAL> with value <STR_LITERAL> to dataframe <VAR>
return a <NUM> unauthorized in django
flask set folder <STR_LITERAL> as the default template folder
how do i <STR_LITERAL> in <VAR> ?
sort a list of lists <VAR> such that third row comes first
sorting a list of lists in python
sorting a list of lists in python
set font <VAR> to display non-ascii characters in matplotlib
convert datetime column <STR_LITERAL> of pandas dataframe <VAR> to ordinal
get html source of selenium webelement <VAR>
get the integer location of a key <VAR> in a pandas data frame
open a <STR_LITERAL> terminal from python script and run <STR_LITERAL> command
add an item with key <STR_LITERAL> and value <NUM> to an dictionary <VAR>
declare an array
insert item <NUM> to a list <VAR>
add an entry <STR_LITERAL> at the beginning of list <VAR>
convert a hex-string representation to actual bytes
select the last column of dataframe <VAR>
get the first value from dataframe <VAR> where column <STR_LITERAL> is equal to <STR_LITERAL>
converting two lists <VAR> and <VAR> into a matrix
get the type of <VAR>
determine the type of variable <VAR>
determine the type of variable <VAR>
determine the type of variable <VAR>
determine the type of variable <VAR>
get the type of variable <VAR>
get the 5th item of a generator
print a string <VAR> with string format
join a list of strings <VAR> using a space <STR_LITERAL>
create list <VAR> containing two empty lists
read a file <STR_LITERAL> into a list <VAR>
delete all occurrences of character <STR_LITERAL> in string <STR_LITERAL>
delete all instances of a character <STR_LITERAL> in a string <STR_LITERAL>
delete all characters <STR_LITERAL> in string <STR_LITERAL>
how to delete all instances of a character in a string in python?
drop rows of pandas dataframe <VAR> having nan in column at index <STR_LITERAL>
get elements from list <VAR> that have a field <VAR> value <NUM>
converting list of strings <VAR> to list of integer <VAR>
convert list of string numbers into list of integers
print <STR_LITERAL> without newline
round off the float that is the product of <VAR> and convert it to an int
find all files in directory <STR_LITERAL> with extension <STR_LITERAL>
find all files in directory <STR_LITERAL> with extension <STR_LITERAL>
find all files in directory <STR_LITERAL> with extension <STR_LITERAL>
plot dataframe <VAR> without a legend
loop through the ip address range <STR_LITERAL>
loop through the ip address range <STR_LITERAL>
loop through the ip address range <STR_LITERAL>
sum the corresponding decimal values for binary values of each boolean element in list <VAR>
write multiple strings <VAR> <VAR> and <VAR> in one line in a file <VAR>
convert list of lists <VAR> into a flat list
print new line character as <VAR> in a string <VAR>
remove last comma character <STR_LITERAL> in string <VAR>
calculate the mean of each element in array <VAR> with the element previous to it
get an array of the mean of each two consecutive values in numpy array <VAR>
load data containing <VAR> from file <VAR> into numpy array <VAR>
reverse sort list of dicts <VAR> by value for key <VAR>
sort a list of dictionary <VAR> based on key <VAR> in descending order
get rows of dataframe <VAR> that match regex <STR_LITERAL>
find the string in <VAR> between two special characters <STR_LITERAL> and <STR_LITERAL>
how to create a list of date string in 'yyyymmdd' format with python pandas?
count number of times string <STR_LITERAL> occurred in string <STR_LITERAL>
decode json string <VAR> to python dict
download the file from url <VAR> and save it under file <VAR>
split string <VAR> by space
split string <VAR> by <STR_LITERAL>
split string <VAR> into a list by whitespace
replace dot characters <STR_LITERAL> associated with ascii letters in list <VAR> with space <STR_LITERAL>
sort list <VAR> based on second index of each string <VAR>
call multiple bash function ‘vasp’ and ‘tee tee_output’ using ‘|’
eliminate all strings from list <VAR>
get all the elements except strings from the list <STR_LITERAL>
sort a list of dictionaries <VAR> by the value of the dictionary key <VAR>
sort a list of dictionaries <VAR> by values in key <VAR> in descending order
how do i sort a list of dictionaries by values of the dictionary in python?
how do i sort a list of dictionaries by values of the dictionary in python?
how to sort a dataframe by the ocurrences in a column in python (pandas)
join together with <STR_LITERAL> elements inside a list indexed with <STR_LITERAL> within a dictionary <VAR>
concatenate array of strings <VAR> into a string
get json data from restful service <STR_LITERAL>
remove all strings from a list a strings <VAR> where the values starts with <VAR> or <VAR>
django filter by hour
sort a list of dictionary <VAR> first by key <VAR> and then by <VAR>
convert datetime object <VAR> to seconds
insert <VAR> before the file extension in <VAR> or replace <VAR> with <VAR> if it precedes the extension
reload a module <VAR>
convert integer <VAR> into an unassigned integer
convert int values in list <VAR> to float
write dataframe <VAR> excluding index to a csv file
convert a urllib unquoted string <VAR> to a json data <VAR>
create a list containing all ascii characters as its elements
write <VAR> to a binary file <VAR>
python regex - check for a capital letter with a following lowercase in string <VAR>
get the last key of dictionary <VAR>
write line "hi there" to file <VAR>
write line <STR_LITERAL> to file <VAR>
write line <STR_LITERAL> to file <VAR>
convert unicode string <VAR> to ascii
django get maximum value associated with field <STR_LITERAL> in model <VAR>
find all numbers and dots from a string <VAR> using regex
python regex to find all numbers and dots from <STR_LITERAL>
execute script <STR_LITERAL> using <STR_LITERAL> shell
sort a list of tuples <VAR> by third item in the tuple
get a list of all keys in cassandra database <VAR> with pycassa
create a datetime with the current date & time
get the index of an integer <NUM> from a list <VAR> if the list also contains boolean items
subtract 13 from every number in a list <VAR>
choose a random file from the directory contents of the c drive <VAR>
get the highest element in absolute value in a numpy matrix <VAR>
get all urls within text <VAR>
match urls whose domain doesn't start with <VAR> from string <VAR> using regex
split a string <VAR> considering the spaces <STR_LITERAL>
open file <VAR> with mode <STR_LITERAL>
sum elements at the same index in list <VAR>
add a new axis to array <VAR>
